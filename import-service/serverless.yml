service: import-service

frameworkVersion: '2'
useDotenv: true


provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  lambdaHashingVersion: 20201221
  region: eu-west-1

  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-fe-shop-import"
    - Effect: "Allow"
      Action: "s3:getObject"
      Resource:
        - "arn:aws:s3:::aws-fe-shop-import"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-fe-shop-import/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [SQSQueue, Arn]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: pavel.handleman@yandex.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'


# arn:aws:s3:::aws-fe-shop-import
functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
         path: import
         method: get
         cors: true
         authorizer:
          name: basicAuthorizer
          arn: "arn:aws:lambda:${aws:region}:${aws:accountId}:function:authorization-service-dev-basicAuthorizer"
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-fe-shop-import
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: 
            Fn::GetAtt: 
              - SQSQueue
              - Arn

